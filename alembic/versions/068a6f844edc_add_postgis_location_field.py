"""add_postgis_location_field

Revision ID: 068a6f844edc
Revises: 58cec5cbaa6d
Create Date: 2025-06-03 18:12:19.558365

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '068a6f844edc'
down_revision: Union[str, None] = '58cec5cbaa6d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add PostGIS Point geometry column
    op.add_column('record', sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True))
    
    # Create spatial index on the geometry column (with IF NOT EXISTS check)
    op.execute("""
        DO $$
        BEGIN
            IF NOT EXISTS (
                SELECT 1 FROM pg_indexes 
                WHERE indexname = 'idx_record_location'
            ) THEN
                CREATE INDEX idx_record_location ON record USING gist (location);
            END IF;
        END
        $$;
    """)
    
    # Remove old lat/lng columns
    op.drop_column('record', 'geo_lng')
    op.drop_column('record', 'geo_lat')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add back old lat/lng columns
    op.add_column('record', sa.Column('geo_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('record', sa.Column('geo_lng', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    
    # Remove spatial index and geometry column (with IF EXISTS check)
    op.execute("""
        DO $$
        BEGIN
            IF EXISTS (
                SELECT 1 FROM pg_indexes 
                WHERE indexname = 'idx_record_location'
            ) THEN
                DROP INDEX idx_record_location;
            END IF;
        END
        $$;
    """)
    
    op.drop_column('record', 'location')
    # ### end Alembic commands ###
